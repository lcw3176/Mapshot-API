name: deploy

on:
  push:
    branches: [ master ]

jobs:
  depoly:
    name: CI/CD release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build
        run: ./gradlew build -x test


      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Mapshot Image Jib
        env:
          MAPSHOT_IMAGE_DOCKERHUB_REPO_PATH: ${{ secrets.MAPSHOT_DOCKERHUB_REPO_PATH }}
        run: ./gradlew mapshot-image:jib -x test
          -Djib.to.image=$MAPSHOT_IMAGE_DOCKERHUB_REPO_PATH
          -Djib.to.tags=mapshot-image

      - name: Mapshot Notice Jib
        env:
          MAPSHOT_NOTICE_DOCKERHUB_REPO_PATH: ${{ secrets.MAPSHOT_DOCKERHUB_REPO_PATH }}
        run: ./gradlew mapshot-notice:jib -x test
          -Djib.to.image=$MAPSHOT_NOTICE_DOCKERHUB_REPO_PATH
          -Djib.to.tags=mapshot-notice


      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Add Github Actions IP to Security group
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          AWS_SECURITY_GROUP_NAME: ${{ secrets.AWS_SECURITY_GROUP_NAME }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          aws ec2 authorize-security-group-ingress --group-name $AWS_SECURITY_GROUP_NAME --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32 > /dev/null

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_SSH_HOST }}
          username: ${{ secrets.AWS_SSH_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            docker-compose down --rmi all
            docker-compose up -d

      - name: Remove Github Actions IP from security group
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SECURITY_GROUP_NAME: ${{ secrets.AWS_SECURITY_GROUP_NAME }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          aws ec2 revoke-security-group-ingress --group-name $AWS_SECURITY_GROUP_NAME --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32 > /dev/null
        if: always()
